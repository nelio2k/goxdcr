// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	peerToPeer "github.com/couchbase/goxdcr/peerToPeer"
	mock "github.com/stretchr/testify/mock"
)

// P2PManager is an autogenerated mock type for the P2PManager type
type P2PManager struct {
	mock.Mock
}

// GetLifecycleId provides a mock function with given fields:
func (_m *P2PManager) GetLifecycleId() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Start provides a mock function with given fields:
func (_m *P2PManager) Start() (peerToPeer.PeerToPeerCommAPI, error) {
	ret := _m.Called()

	var r0 peerToPeer.PeerToPeerCommAPI
	if rf, ok := ret.Get(0).(func() peerToPeer.PeerToPeerCommAPI); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(peerToPeer.PeerToPeerCommAPI)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Stop provides a mock function with given fields:
func (_m *P2PManager) Stop() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
